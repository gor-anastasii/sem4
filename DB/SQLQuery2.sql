USE master;
CREATE database MyBase;

CREATE table Преподаватели 
(
	Код_преподавателя int primary key,
	Фамилия nvarchar(20),
	Имя nvarchar(20),
	Отчество nvarchar(20),
	Телефон int,
	Стаж int,
);

CREATE table Группы 
(
	Номер_группы int primary key,
	Специальность nvarchar(20),
	Отделение nvarchar(20),
	Количество_студентов int,
);

CREATE table Курсы
(
	Код_предмета int primary key,
	Предмет nvarchar(20),
	Тип_занятия nvarchar(20),
	Количество_часов real,
	Оплата real,
	Код_преподавателя int foreign key references Преподаватели(Код_преподавателя),
	Номер_группы int foreign key references Группы(Номер_группы),
);

ALTER table Курсы ADD Дата_начала date;
ALTER table Курсы DROP column Дата_начала;

INSERT into Преподаватели (Код_преподавателя, Фамилия, Имя, Отчество, Телефон, Стаж)
	Values(1, 'Городилина', 'Анастасия', 'Сергеевна', 1234566, 2),
		  (2, 'Гиль', 'Виталия', 'Сергеевна', 1654366, 4);

INSERT into Группы (Номер_группы, Специальность, Отделение, Количество_студентов)
	Values(1, 'ПОИТ', 'ФИТ', 30),
		  (2, 'ИСИТ', 'ФИТ', 28),
		  (4, 'ИСИТ', 'ФИТ', 15);

INSERT into Курсы (Код_предмета, Предмет, Тип_занятия, Количество_часов, Оплата, Код_преподавателя, Номер_группы)
	Values(1, 'ООП', 'лк', 30, 1234, 1, 1),
		  (2, 'JS', 'пз', 28, 8765, 2, 2);

SELECT Номер_группы, Количество_студентов from Группы;

SELECT count(*) from Группы;

SELECT Номер_группы, Специальность ghvbhgbujnj, Количество_студентов from Группы
		WHERE Количество_студентов > 25;

UPDATE Группы set Количество_студентов = Количество_студентов - 1;

DELETE from Группы WHERE Номер_группы = 4;

create database MyBase1 on primary
( name = N'MyBase1_mdf', filename = N'C:\AllMine\Labs\DB\MyBase1_mdf.mdf', 
   size = 10240Kb, maxsize=UNLIMITED, filegrowth=1024Kb),
( name = N'MyBase1_ndf', filename = N'C:\AllMine\Labs\DB\MyBase1_ndf.ndf', 
   size = 10240KB, maxsize=1Gb, filegrowth=25%),
filegroup FG1
( name = N'MyBase1_fg1_1', filename = N'C:\AllMine\Labs\DB\MyBase1_fgq-1.ndf', 
   size = 10240Kb, maxsize=1Gb, filegrowth=25%),
( name = N'MyBase1_fg1_2', filename = N'C:\AllMine\Labs\DB\MyBase1_fgq-2.ndf', 
   size = 10240Kb, maxsize=1Gb, filegrowth=25%)
log on
( name = N'MyBase1_log', filename=N'C:\AllMine\Labs\DB\MyBase1_log.ldf',       
   size=10240Kb,  maxsize=2048Gb, filegrowth=10%)


   
CREATE table Преподаватели 
(
	Код_преподавателя int primary key,
	Фамилия nvarchar(20),
	Имя nvarchar(20),
	Отчество nvarchar(20),
	Телефон int,
	Стаж int,
) on FG1;

CREATE table Группы 
(
	Номер_группы int primary key,
	Специальность nvarchar(20),
	Отделение nvarchar(20),
	Количество_студентов int,
) on fg1;

CREATE table Курсы
(
	Код_предмета int primary key,
	Предмет nvarchar(20),
	Тип_занятия nvarchar(20),
	Количество_часов real,
	Оплата real,
	Код_преподавателя int foreign key references Преподаватели(Код_преподавателя),
	Номер_группы int foreign key references Группы(Номер_группы),
) on fg1;	



------------ 4 лаба -------------------------------------------------------------

SELECT Преподаватели.Фамилия, Курсы.Оплата
FROM Преподаватели INNER JOIN Курсы 
ON Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
WHERE Курсы.Оплата LIKE '%23%';

SELECT Курсы.Предмет AS Предмет_Обучения, Преподаватели.Фамилия AS Лектор,
       Курсы.Количество_часов AS Длительность, Преподаватели.Стаж AS Стаж,
       CASE
           WHEN Преподаватели.Стаж = 2 THEN 'молодняк'
           WHEN Преподаватели.Стаж = 3 THEN 'спец'
           WHEN Преподаватели.Стаж = 4 THEN 'гуру'
       END AS Титул
FROM Курсы INNER JOIN Преподаватели
ON Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
WHERE Преподаватели.Стаж BETWEEN 2 AND 4
ORDER BY Преподаватели.Стаж DESC;

SELECT Курсы.Предмет AS Занятие, ISNULL(Группы.Специальность, '***') AS Группа
FROM Курсы
LEFT OUTER JOIN Группы 
ON Курсы.Номер_группы = Группы.Номер_группы;

SELECT Г.Количество_студентов, К.Предмет
FROM Группы Г RIGHT JOIN Курсы К
ON Г.Номер_группы = К.Номер_группы;

SELECT К.Предмет, Г.Специальность
FROM Курсы К FULL OUTER JOIN Группы Г
ON Г.Номер_группы = К.Номер_группы;
 
SELECT Курсы.Предмет AS [Занятие], Преподаватели.Фамилия AS [Лектор]
FROM Курсы
CROSS JOIN Преподаватели;

-------------------------- 5 lab -----------------

SELECT Курсы.Предмет, Курсы.Количество_часов
FROM Курсы
WHERE Курсы.Код_преподавателя IN (
    SELECT Преподаватели.Код_преподавателя
    FROM Преподаватели
    WHERE Преподаватели.Стаж LIKE '%4%'
       OR Преподаватели.Стаж LIKE '%3%'
);

SELECT Курсы.Предмет, Курсы.Количество_часов, Преподаватели.Фамилия
FROM Курсы INNER JOIN Преподаватели
ON Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
WHERE Преподаватели.Фамилия LIKE  '%а%'
   OR Преподаватели.Фамилия LIKE '%р%';

SELECT Курсы.Предмет, Курсы.Количество_часов
FROM Курсы
WHERE Курсы.Номер_группы = (
    SELECT TOP(1) Группы.Номер_группы
    FROM Группы
    WHERE Группы.Количество_студентов >= 20 AND Группы.Номер_группы = Курсы.Номер_группы
)
ORDER BY Курсы.Номер_группы DESC;

SELECT Курсы.Предмет
FROM Курсы
WHERE EXISTS (
    SELECT Преподаватели.Код_преподавателя from Преподаватели
    WHERE Преподаватели.Фамилия LIKE '%ш%' AND Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
)

SELECT 
    (SELECT AVG(Оплата) FROM Курсы WHERE Предмет = 'ООП') [AVG_OOP],
	(SELECT AVG(Оплата) FROM Курсы WHERE Предмет = 'JS') [AVG_JS],
	(SELECT AVG(Оплата) FROM Курсы WHERE Предмет = 'Java') [AVG_Java]
FROM Курсы


SELECT Курсы.Предмет, Курсы.Количество_часов
FROM Курсы 
WHERE Курсы.Код_преподавателя >= ALL (
    SELECT Преподаватели.Код_преподавателя
    FROM Преподаватели
    WHERE Преподаватели.Телефон LIKE '%23%'
)


SELECT Курсы.Предмет, Курсы.Количество_часов, Курсы.Код_преподавателя
FROM Курсы 
WHERE Курсы.Код_преподавателя >= ANY (
    SELECT Преподаватели.Код_преподавателя
    FROM Преподаватели
    WHERE Преподаватели.Телефон LIKE '%5%'
)

-------------------------------- 6 lab ----------------------
SELECT 
    Курсы.Тип_занятия AS [Тип занятия],
    Группы.Номер_группы AS [Номер группы],
    MAX(Курсы.Количество_часов) AS [Максимальное количество часов],
    MIN(Курсы.Количество_часов) AS [Минимальное количество часов],
    AVG(Курсы.Количество_часов) AS [Среднее количество часов],
    SUM(Курсы.Количество_часов) AS [Суммарное количество часов],
    COUNT(*) AS [Количество предметов]
FROM 
    Курсы INNER JOIN Группы ON Курсы.Номер_группы = Группы.Номер_группы
GROUP BY 
    Курсы.Тип_занятия, Группы.Номер_группы;

SELECT 
    CASE 
        WHEN Курсы.Тип_занятия = 'лк' THEN 'Лекция'
        WHEN Курсы.Тип_занятия = 'лб' THEN 'Лабораторная'
        WHEN Курсы.Тип_занятия = 'пз' THEN 'Практическая'
    END AS [Тип занятия],
    Группы.Специальность AS [Специальность],
    COUNT(*) AS [Количество курсов]
FROM Курсы INNER JOIN Группы ON Курсы.Номер_группы = Группы.Номер_группы
GROUP BY 
    CASE 
        WHEN Курсы.Тип_занятия = 'лк' THEN 'Лекция'
        WHEN Курсы.Тип_занятия = 'лб' THEN 'Лабораторная'
        WHEN Курсы.Тип_занятия = 'пз' THEN 'Практическая'
    END,
    Группы.Специальность;

SELECT Курсы.Тип_занятия AS [Тип занятия],
	   Группы.Номер_группы AS [Номер группы],
       ROUND(AVG(Курсы.Количество_часов), 2) AS [Среднее количество часов],
       ROUND(AVG(Курсы.Оплата), 2) AS [Средняя оплата]
FROM Курсы INNER JOIN Группы ON Курсы.Номер_группы = Группы.Номер_группы	
GROUP BY Тип_занятия, Группы.Номер_группы;

SELECT Курсы.Тип_занятия AS [Тип занятия],
	   Группы.Номер_группы AS [Номер группы],
       ROUND(AVG(Курсы.Количество_часов), 2) AS [Среднее количество часов],
       ROUND(AVG(Курсы.Оплата), 2) AS [Средняя оплата]
FROM Курсы INNER JOIN Группы ON Курсы.Номер_группы = Группы.Номер_группы	
WHERE Группы.Номер_группы >= 3
GROUP BY Тип_занятия, Группы.Номер_группы;

SELECT Тип_занятия AS [Тип занятия],
       SUM(Оплата) AS [Общая оплата]
FROM Курсы 
WHERE Тип_занятия IN('лб', 'пз')
GROUP BY Тип_занятия;

SELECT Курсы.Предмет AS [Предмет],
	   Преподаватели.Фамилия AS [Фамилия преподавателя],
       COUNT(*) AS [Количество]
FROM Курсы INNER JOIN Преподаватели ON Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
GROUP BY Курсы.Предмет, Преподаватели.Фамилия
HAVING AVG(Курсы.Оплата) >= 100 AND AVG(Курсы.Оплата) <= 2000;

----------------------- lab 7 --------------------------------

select Курсы.Предмет, Преподаватели.Фамилия, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
group by rollup(Курсы.Предмет, Преподаватели.Фамилия);


select Курсы.Предмет, Преподаватели.Фамилия, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
group by cube(Курсы.Предмет, Преподаватели.Фамилия);


select Курсы.Предмет, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
where Курсы.Предмет like 'JS'
group by rollup(Курсы.Предмет)
UNION
select Курсы.Предмет, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
where Курсы.Предмет like 'ООП'
group by rollup(Курсы.Предмет);


select Курсы.Предмет, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
where Курсы.Предмет like 'JS'
group by rollup(Курсы.Предмет)
intersect
select Курсы.Предмет, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
where Курсы.Предмет like 'ООП'
group by rollup(Курсы.Предмет);


select Курсы.Предмет, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
where Курсы.Предмет like 'JS'
group by rollup(Курсы.Предмет)
except
select Курсы.Предмет, AVG(Курсы.Оплата)
from Курсы inner join Преподаватели
on Курсы.Код_преподавателя = Преподаватели.Код_преподавателя
where Курсы.Предмет like 'ООП'
group by rollup(Курсы.Предмет);


------------------------------ lab 8 -------------------

create view [Преподаватель]
as select Фамилия[Фамилия], Стаж[Стаж]
from Преподаватели

select * from Преподаватель


Create VIEW[Предметы]
as select Курсы.Предмет, SUM(Группы.Количество_студентов)[Количество студентов]
		from Курсы inner join Группы
		on Курсы.Номер_группы = Группы.Номер_группы
		group by Предмет;

select * from Предметы;

insert into  Предметы(Предмет, [Количество студентов])
values('fghj', 20)


create VIEW[Преподаватели_с_А]
as select Фамилия[Фамилия], Стаж[Стаж]
from Преподаватели
where Преподаватели.Фамилия like '%а%'

select * from Преподаватели_с_А;

update Преподаватели_с_А
set Фамилия = 'fghj', Стаж = 20



create VIEW Лекции(Код_предмета, Предмет, Тип_занятия, Оплата)
as select Код_предмета, Предмет, Тип_занятия, Оплата
from Курсы 
where Курсы.Тип_занятия = 'лк' WITH CHECK OPTION

insert into Лекции(Код_предмета, Предмет, Тип_занятия, Оплата) 
values (10, 'Философия', 'лк', 1234);

insert into Лекции(Код_предмета, Предмет, Тип_занятия, Оплата) 
values (11, 'Философия', 'лб', 1234);

select * from Лекции;

create VIEW Предметы2(код, название, количество_часов)
as select TOP 5 Код_предмета, Предмет, Количество_часов
from Курсы order by Курсы.Предмет

select * from Предметы2;


ALTER VIEW dbo.[Преподаватель] with SCHEMABINDING
as select dbo.Преподаватели.Фамилия [Преподаватель],
		  dbo.Курсы.Предмет [Предмет],
          SUM(dbo.Курсы.Количество_часов) [Рабочие_часы]
from dbo.Преподаватели inner join dbo.Курсы
on dbo.Курсы.Код_преподавателя = dbo.Преподаватели.Код_преподавателя
group by dbo.Преподаватели.Фамилия, dbo.Курсы.Предмет;
	
select * from Преподаватель;



